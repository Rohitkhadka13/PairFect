import 'package:flutter/material.dart';
import 'package:get/get.dart';
import '../controllers/chat_controller.dart';

class ChatScreen extends StatelessWidget {
  ChatScreen({super.key});

  final Map<String, dynamic> args = Get.arguments ?? {};

  @override
  Widget build(BuildContext context) {
    final ChatController controller = Get.put(ChatController(
      chatRoomId: args['chatRoomId'] ?? '',
      receiverName: args['receiverName'] ?? 'User',
    ));

    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.pink,
        title: Obx(() => Text(controller.receiverName.value)),
        actions: [
          Obx(() => IconButton(
                tooltip: controller.aiEnabled.value
                    ? "Disable AI Suggestions"
                    : "Enable AI Suggestions",
                icon: AnimatedContainer(
                  duration: const Duration(milliseconds: 300),
                  decoration: BoxDecoration(
                    color: controller.aiEnabled.value
                        ? Colors.white.withOpacity(0.2)
                        : Colors.transparent,
                    borderRadius: BorderRadius.circular(20),
                    boxShadow: controller.aiEnabled.value
                        ? [
                            BoxShadow(
                              color: Colors.white.withOpacity(0.3),
                              blurRadius: 8,
                              spreadRadius: 1,
                            ),
                          ]
                        : [],
                  ),
                  padding: const EdgeInsets.all(8),
                  child: Icon(
                    controller.aiEnabled.value
                        ? Icons.auto_awesome
                        : Icons.auto_awesome_outlined,
                    color: controller.aiEnabled.value
                        ? Colors.white
                        : Colors.white70,
                  ),
                ),
                onPressed: () {
                  controller.aiEnabled.toggle();
                  if (controller.aiEnabled.value) {
                    showDialog(
                      context: context,
                      builder: (context) => AlertDialog(
                        backgroundColor: Colors.pink.shade50,
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(16)),
                        title: const Text(
                          "âœ¨ AI Suggestions Enabled",
                          style: TextStyle(
                              color: Colors.pink, fontWeight: FontWeight.bold),
                        ),
                        content: const Text(
                          "Responses generated by AI are for inspiration only. "
                          "Please ensure they reflect your real thoughts before sending. ðŸ’Œ",
                          style: TextStyle(color: Colors.black87),
                        ),
                        actions: [
                          TextButton(
                            child: const Text("Got it ðŸ’–",
                                style: TextStyle(color: Colors.pink)),
                            onPressed: () => Navigator.of(context).pop(),
                          ),
                        ],
                      ),
                    );
                  }
                },
              )),
          IconButton(
            icon: const Icon(Icons.call, color: Colors.white),
            onPressed: () {},
          ),
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: Obx(() => ListView.builder(
                  controller: controller.scrollController,
                  padding:
                      const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
                  itemCount: controller.messages.length,
                  itemBuilder: (context, index) {
                    final msg = controller.messages[index];
                    final isMe = controller.isCurrentUser(msg);
                    final content = msg.get<String>('content') ?? '';

                    return Column(
                      crossAxisAlignment: isMe
                          ? CrossAxisAlignment.end
                          : CrossAxisAlignment.start,
                      children: [
                        Container(
                          margin: const EdgeInsets.symmetric(vertical: 4),
                          padding: const EdgeInsets.symmetric(
                              horizontal: 12, vertical: 10),
                          decoration: BoxDecoration(
                            color: isMe ? Colors.pinkAccent : Colors.grey[300],
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Text(
                            content,
                            style: TextStyle(
                              color: isMe ? Colors.white : Colors.black,
                            ),
                          ),
                        ),
                        if (!isMe &&
                            controller.aiEnabled.value &&
                            index == controller.messages.length - 1) ...[
                          Align(
                            alignment: Alignment.centerLeft,
                            child: IconButton(
                              icon: const Icon(Icons.auto_awesome,
                                  color: Colors.pink, size: 20),
                              onPressed: () =>
                                  controller.generateAIResponse(content),
                            ),
                          ),
                          Obx(() {
                            if (controller.isGeneratingAIResponse.value) {
                              return const Padding(
                                padding: EdgeInsets.only(left: 8.0),
                                child:
                                    CircularProgressIndicator(strokeWidth: 2),
                              );
                            }

                            if (controller.aiSuggestions.isNotEmpty) {
                              return Wrap(
                                spacing: 6,
                                children: controller.aiSuggestions
                                    .map((suggestion) => ActionChip(
                                          label: Text(suggestion),
                                          backgroundColor: Colors.pink.shade100,
                                          onPressed: () => controller
                                              .useAISuggestion(suggestion),
                                        ))
                                    .toList(),
                              );
                            }

                            return const SizedBox.shrink();
                          }),
                        ],
                      ],
                    );
                  },
                )),
          ),
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: controller.textController,
                    decoration: InputDecoration(
                      hintText: "Type a message...",
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                      contentPadding:
                          const EdgeInsets.symmetric(horizontal: 16),
                      suffixIcon:
                          Obx(() => controller.isGeneratingAIResponse.value
                              ? const Padding(
                                  padding: EdgeInsets.all(12.0),
                                  child:
                                      CircularProgressIndicator(strokeWidth: 2),
                                )
                              : const SizedBox.shrink()),
                    ),
                  ),
                ),
                const SizedBox(width: 8),
                Obx(() => controller.isGeneratingAIResponse.value
                    ? const Padding(
                        padding: EdgeInsets.all(8.0),
                        child: CircularProgressIndicator(),
                      )
                    : IconButton(
                        icon: const Icon(Icons.send, color: Colors.pink),
                        onPressed: () => controller.sendMessage(
                          controller.textController.text,
                        ),
                      )),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
